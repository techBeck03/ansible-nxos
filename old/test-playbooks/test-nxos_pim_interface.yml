---

  - name: test playbook for nxos_pim_interface
    hosts: all
    gather_facts: no
    connection: local

    tasks:

       # ensure pim is enabled
       - nxos_feature:  feature=pim state=enabled host={{ inventory_hostname }}
         name: Ensure PIM is enabled

       # ensuring interface is a layer 3 interface before testing begins
       - nxos_interface:  interface=eth1/33 mode=layer3 host={{ inventory_hostname }}
         name: ensure interface is a Layer 3 port

       # ensure PIM is not running on the interface
       - nxos_pim_interface: name=eth1/33 state=absent host={{ inventory_hostname }}
         register: pim_data
       - assert:
           that:
             - "{} == {{ pim_data.final }}"
         name: Test 1

       # ensure the interface has pim-sm enabled with the appropriate priority and hello interval
       - nxos_pim_interface:  name=eth1/33 dr_prio=10 hello_interval=40 state=present host={{ inventory_hostname }}
         register: pim_data
       - assert:
           that:
             - pim_data.final.dr_prio == '10'
             - pim_data.final.hello_interval == '40'
         name: Test 2

       # configuring the same interface as a Layer 2 port to test failure conditions
       - nxos_interface:  interface=eth1/33 mode=layer2 host={{ inventory_hostname }}

       # ensure the module fails b/c it only works on Layer 3 interfaces
       - nxos_pim_interface:  name=eth1/33 dr_prio=10 hello_interval=40 state=present host={{ inventory_hostname }}
         register: pim_data
         ignore_errors: True
       - assert:
           that:
             - pim_data.failed == true
         name: Test 3

       # ensure interface is back in L3 mode to continue testing
       - nxos_interface:  interface=eth1/33 mode=layer3 host={{ inventory_hostname }}

       # enable pim sparse mode only with no other attributes
       - nxos_pim_interface:  name=eth1/33 state=present host={{ inventory_hostname }}
         register: pim_data
       - assert:
           that:
             - pim_data.final.dr_prio is defined
         name: Test 4

       # ensure neighbor policy exists and is a prefix-list
       - nxos_pim_interface:  name=eth1/33 neighbor_policy=NEIGH_POL neighbor_type=prefix host={{ inventory_hostname }}
         register: pim_data
       - assert:
           that:
             - pim_data.final.neighbor_type == "prefix"
             - pim_data.final.neighbor_policy == "NEIGH_POL"
         name: Test 5

       # ensure neighbor policy exists and is a route map
       - nxos_pim_interface:  name=eth1/33 neighbor_policy=NEIGH_POL neighbor_type=routemap host={{ inventory_hostname }}
         register: pim_data
       - assert:
           that:
             - pim_data.final.neighbor_type == 'routemap'
             - pim_data.final.neighbor_policy == 'NEIGH_POL'
         name: Test 6

       # ensure join-prune policies exist
       - nxos_pim_interface:  name=eth1/33 jp_policy_in=JPIN jp_policy_out=JPOUT jp_type_in=routemap jp_type_out=routemap host={{ inventory_hostname }}
         register: pim_data
         tags:
           - testing
       - assert:
           that:
             - pim_data.final.jp_type_in == 'routemap'
             - pim_data.final.jp_type_out == 'routemap'
             - pim_data.final.jp_policy_out == 'JPOUT'
             - pim_data.final.jp_policy_in == 'JPIN'
         name: Test 7
         tags:
           - testing

       # verify idempotency
       - nxos_pim_interface:  name=eth1/33 jp_policy_in=JPIN jp_policy_out=JPOUT jp_type_out=routemap jp_type_in=routemap neighbor_policy=NEIGH_POL neighbor_type=routemap host={{ inventory_hostname }}
         register: pim_data
       - assert:
           that:
             - pim_data.changed == false
         name: Test 8

       # ensure defaults are in place
       - nxos_pim_interface: name=eth1/33 state=default host={{ inventory_hostname }}
         register: pim_data
         tags:
           - default
       - assert:
           that:
             - pim_data.final.dr_prio == '1'
             - pim_data.final.border == false
             - pim_data.final.hello_interval == '30'
             - pim_data.final.isauth == false
             - pim_data.final.jp_type_in == None
             - pim_data.final.jp_type_out == None
             - pim_data.final.jp_policy_out == None
             - pim_data.final.jp_policy_in == None
         name: Test 9

       # ensure PIM is not running on the interface
       - nxos_pim_interface: name=eth1/33 state=absent host={{ inventory_hostname }}
         register: pim_data
       - assert:
           that:
             - "{} == {{ pim_data.final }}"
         name: Test 10
