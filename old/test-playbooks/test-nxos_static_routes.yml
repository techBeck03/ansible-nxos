---

- name: static route testing
  hosts: n9k1
  connection: local
  gather_facts: no


  tasks:

  # Basic static route, default vrf
  - name: "Basic static route"
    nxos_static_routes: prefix=1.1.1.0/24 next_hop=2.2.2.2 host={{ inventory_hostname }}
    register: returned

  - assert:
      that:
        - "returned.final.prefix == '1.1.1.0/24'"
        - "returned.final.next_hop == '2.2.2.2'"
        - "returned.final.vrf == 'default'"

  # Repeat, should be no change
  - name: "Repeat basic static route, no change to device"
    nxos_static_routes: prefix=1.1.1.0/24 next_hop=2.2.2.2 host={{ inventory_hostname }}
    register: returned

  - assert:
      that:
        - "returned.final.prefix == '1.1.1.0/24'"
        - "returned.final.next_hop == '2.2.2.2'"
        - "returned.final.vrf == 'default'"
        - "returned.changed == false"

  # Basic static route, alternate vrf
  - name: "Basic static route, altnernate VRF"
    nxos_static_routes: prefix=1.1.1.0/24 next_hop=2.2.2.2 vrf=test host={{ inventory_hostname }}
    register: returned

  - assert:
      that:
        - "returned.final.prefix == '1.1.1.0/24'"
        - "returned.final.next_hop == '2.2.2.2'"
        - "returned.final.vrf == 'test'"

  # Static route with name, alternative VRF
  - name: "Static route with name, altnernate VRF"
    nxos_static_routes: prefix=1.1.1.0/24 next_hop=2.2.2.2 route_name=ntc vrf=test host={{ inventory_hostname }}
    register: returned

  - assert:
      that:
        - "returned.final.prefix == '1.1.1.0/24'"
        - "returned.final.next_hop == '2.2.2.2'"
        - "returned.final.vrf == 'test'"
        - "returned.final.route_name == 'ntc'"

  # Adding tag to existing doesn't replace name
  - name: "Adding tag to existing static route does not remove other fields"
    nxos_static_routes: prefix=1.1.1.0/24 next_hop=2.2.2.2 tag=80 vrf=test host={{ inventory_hostname }}
    register: returned

  - assert:
      that:
        - "returned.final.prefix == '1.1.1.0/24'"
        - "returned.final.next_hop == '2.2.2.2'"
        - "returned.final.vrf == 'test'"
        - "returned.final.route_name == 'ntc'"
        - "returned.final.tag == '80'"

  # Prefix normalization
  - name: "Entered prefix is normalized to CIDR boundary"
    nxos_static_routes: prefix=1.1.3.4/24 next_hop=2.2.2.2 route_name=prefix_test host={{ inventory_hostname }}
    register: returned

  - assert:
      that:
        - "returned.final.prefix == '1.1.3.0/24'"
        - "returned.final.next_hop == '2.2.2.2'"
        - "returned.final.vrf == 'default'"
        - "returned.final.route_name == 'prefix_test'"

  # Prefix normalization 2
  - name: "Entered prefix is normalized to CIDR boundary, and matched with previous test"
    nxos_static_routes: prefix=1.1.3.253/24 next_hop=2.2.2.2 host={{ inventory_hostname }}
    register: returned

  - assert:
      that:
        - "returned.final.prefix == '1.1.3.0/24'"
        - "returned.final.next_hop == '2.2.2.2'"
        - "returned.final.vrf == 'default'"
        - "returned.final.route_name == 'prefix_test'"
        - "returned.changed == false"

  # Remove route, default VRF
  - name: "Remove route, default VRF"
    nxos_static_routes: state=absent prefix=1.1.1.0/24 next_hop=2.2.2.2 host={{ inventory_hostname }}
    register: returned

  - assert:
      that:
        - "{} == {{ returned.final }}"
        - "returned.changed == true"

  # Remove route that does not exist, default VRF
  - name: "Remove route that does not exist, default VRF"
    nxos_static_routes: state=absent prefix=1.1.1.0/24 next_hop=2.2.2.2 host={{ inventory_hostname }}
    register: returned

  - assert:
      that:
        - "{} == {{ returned.final }}"
        - "returned.changed == false"

  # Remove route, alternate VRF
  - name: "Remove route, alternate VRF"
    nxos_static_routes: state=absent prefix=1.1.1.0/24 next_hop=2.2.2.2 vrf=test host={{ inventory_hostname }}
    register: returned

  - assert:
      that:
        - "{} == {{ returned.final }}"
        - "returned.changed == true"

  # Remove route that does not exist, alternate VRF
  - name: "Remove route that does not exist, alternate VRF"
    nxos_static_routes: state=absent prefix=1.1.1.0/24 next_hop=2.2.2.2 vrf=test host={{ inventory_hostname }}
    register: returned

  - assert:
      that:
        - "{} == {{ returned.final }}"
        - "returned.changed == false"
